#!/bin/sh
[ "$DEBUG" ] && set -x
set -e

arch=$(uname -i)
rootfs=$(mktemp -d)
tmp=$(mktemp -d)

mirrors="\nhttp://mirror.envygeeks.io/alpine/<%= @meta.release =~ /^[\d,\.]+$/ ? "v" : "" %><%= @meta.release %>/main"
mirrors=$mirrors"\n@community http://mirror.envygeeks.io/alpine/edge/community"
mirrors=$mirrors"\n@testing http://mirror.envygeeks.io/alpine/edge/testing"
release_url="http://mirror.envygeeks.io/alpine/<%= @meta.release \
  =~ /^[\d,\.]+$/ ? "v" : "" %><%= @meta.release %>/main"
apk --update add wget

tar_ignore() {
  sed -r "/tar: Ignoring unknown extended header/d"
}

cd $tmp
apk --update fetch --repository=$release_url alpine-keys
tar xzf alpine-keys-*.apk && mkdir -p $rootfs/etc && cp -a etc/* $rootfs/etc && rm -rf $tmp && mkdir -p $tmp && cd $tmp
apk --initdb --root=$rootfs --repository=$release_url --update-cache add apk-tools busybox libc-utils alpine-baselayout alpine-keys musl
apk --keys-dir=$rootfs/etc/apk/keys --root=$rootfs --repository=$release_url --update fetch alpine-base
tar xzf alpine-base-*.apk && cp -a etc/* $rootfs/etc && rm -rf $tmp && mkdir -p $tmp

cd ~> /dev/null
cp -R $COPY_DIR/* $rootfs 2> /dev/null || true
<% if @meta.startup? %>
mkdir -p $rootfs/etc/startup1.d
mkdir -p $rootfs/etc/startup2.d
mkdir -p $rootfs/etc/startup3.d
mkdir -p $rootfs/etc/shutdown.d
<% end %>

cp /etc/hosts $rootfs/etc/hosts
cp /etc/resolv.conf $rootfs/etc/resolv.conf
printf "$mirrors" > $rootfs/etc/apk/repositories
chroot $rootfs sh -ec "apk --update add <%= @meta.packages %>"
chroot $rootfs sh -ec "apk del <%= @meta.package_cleanup %>"
chroot $rootfs sh -ec "apk del <%= @meta.package_deep_cleanup %>"
chroot $rootfs sh -ec '{
	mv /var/run/* /run 2> /dev/null || true
	mv /var/lock  /run 2> /dev/null || true
	rm -rf /var/run /var/lock
	ln -s /run/lock /var/lock
	ln -s /run /var/run
}'

rm -rf $rootfs/etc/hosts
rm -rf $rootfs/etc/resolv.conf
docker-helper cleanup $rootfs
tar -zf $TAR_GZ --numeric-owner -C $rootfs -c .
