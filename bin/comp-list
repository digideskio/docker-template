#!/usr/bin/env ruby
# Frozen-string-literal: true
# @see https://envygeeks.io/2016/02/02/on-bash-complete-in-ruby/
# Copyright: 2016 Jordon Bedwell - MIT License
# Encoding: utf-8

# ----------------------------------------------------------------------------
# rubocop:disable Style/ElseAlignment
# ----------------------------------------------------------------------------

ARGV.shift
require "msgpack"
list = MessagePack.unpack(File.read(File.expand_path(
  "comp-list.pak", __dir__
)))

# ----------------------------------------------------------------------------
# @param obj [Hash] the hash you wish to pull the `_reply` from.
# @param key [Any_] the string you are checking inside of the list.
# Check if a key is included inside of given reply object.
# @return TrueClass|FalseClass true|false
# ----------------------------------------------------------------------------

def key?(obj, key)
  obj["_reply"].include?(
    key
  )
end

# ----------------------------------------------------------------------------
# Checks to see if the key is partially within an array.
# @param obj [Hash] the hash you wish to pull the `_reply` from.
# @param key [Any_] the string grepping out of the list.
# @return TrueClass|FalseClass true|false
# ----------------------------------------------------------------------------

def contains?(obj, key)
  result = obj["_reply"].grep(
    /#{Regexp.escape(key)}/
  )

  !result.empty?
end

# ----------------------------------------------------------------------------
# Check if a key is an opt (argument).
# @return TrueClass|FalseClass true|false
# @param key [Any_] the key.
# ----------------------------------------------------------------------------

def opt?(key)
  key =~ /\A-{1,2}/
end

# ----------------------------------------------------------------------------

if ARGV.empty?
  $stdout.puts list["_reply"].join(
    " "
  )
else
  none = false
  rtrn = list

  ARGV.each_with_index do |key, index|
    if rtrn.key?(key) then rtrn = rtrn[key]
      elsif key?(rtrn, key) && !opt?(key) then none = true
      elsif index + 1 == ARGV.size && contains?(rtrn, key) then next
      elsif key?(rtrn, key) && opt?(key) then next
      else none = true
    end
  end

  unless none
    rtrn = rtrn["_reply"]
    $stdout.puts rtrn.join(
      " "
    )
  end
end
